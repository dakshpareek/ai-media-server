#!/bin/bash

set -e

echo "üîê Starting NordVPN CLI Container for AI Media Server"
echo "==================================================="

# Start NordVPN daemon
echo "üì° Starting NordVPN daemon..."
nordvpnd &
sleep 10

# Check daemon status
echo "üîç Checking daemon status..."
if ! pgrep -x "nordvpnd" > /dev/null; then
    echo "‚ùå Daemon failed to start"
    exit 1
fi

echo "‚úÖ Daemon is running (Version: $(nordvpn version | head -1))"

# Check if already authenticated
if nordvpn account >/dev/null 2>&1; then
    echo "‚úÖ Already authenticated - skipping login"
else
    echo ""
    echo "üîë Interactive browser authentication required"
    echo "üì± Opening authentication URL..."
    echo ""
    
    # Run login and capture the URL
    echo "üé´ Generating authentication URL..."
    nordvpn login | grep -E "(Continue in the browser|https://)" || echo "‚ö†Ô∏è  Please check output above for authentication URL"
    
    echo ""
    echo "üìã Waiting for authentication to complete..."
    echo "üí° Open the URL above in your browser and log in with your NordVPN credentials"
    
    # Wait for authentication (check every 15 seconds for up to 10 minutes)
    for i in {1..40}; do
        if nordvpn account >/dev/null 2>&1; then
            echo "‚úÖ Authentication successful!"
            break
        fi
        
        if [ $i -eq 40 ]; then
            echo "‚è∞ Authentication timeout. Container will continue running."
            echo "üí° You can authenticate later - the container will automatically detect it"
            break
        fi
        
        echo "   Waiting for authentication... ($i/40) - $(date)"
        sleep 15
    done
fi

# Configure VPN settings if authenticated
if nordvpn account >/dev/null 2>&1; then
    echo ""
    echo "‚öôÔ∏è  Configuring VPN settings..."
    
    # Set technology
    echo "üîß Setting technology to: ${TECHNOLOGY:-NordLynx}"
    nordvpn set technology "${TECHNOLOGY:-NordLynx}" || echo "‚ö†Ô∏è  Technology setting failed"
    
    # Allow local network
    if [[ -n "$NETWORK" ]]; then
        echo "üè† Allowing local network: $NETWORK"
        nordvpn whitelist add subnet "$NETWORK" || echo "‚ö†Ô∏è  Network whitelist failed"
    fi
    
    # Connect to VPN
    echo "üåç Connecting to VPN..."
    if [[ -n "$CONNECT" ]]; then
        nordvpn connect "$CONNECT" || echo "‚ùå Initial connection failed - will retry"
    else
        nordvpn connect || echo "‚ùå Initial connection failed - will retry"
    fi
    
    # Wait for connection
    sleep 10
    
    # Verify connection
    echo "‚úÖ Checking VPN status..."
    nordvpn status
    
    echo ""
    echo "üåê External IP check:"
    curl -s --max-time 10 ifconfig.me || echo "Could not verify external IP"
    echo ""
    
else
    echo "‚ö†Ô∏è  Not authenticated - VPN connection skipped"
fi

echo ""
echo "üéâ NordVPN CLI container ready!"
echo "üîó AI Media Server services:"
echo "   ‚Ä¢ Prowlarr (VPN): http://localhost:9696"
echo "   ‚Ä¢ FlareSolverr (VPN): http://localhost:8191"
echo "   ‚Ä¢ Other services: Running on local network"

# Main monitoring loop
while true; do
    # Check authentication status
    if nordvpn account >/dev/null 2>&1; then
        # Check VPN connection
        if nordvpn status | grep -q "Connected"; then
            echo "‚úÖ $(date): VPN connected and healthy"
        else
            echo "‚ö†Ô∏è  $(date): VPN disconnected - attempting reconnect..."
            if [[ -n "$CONNECT" ]]; then
                nordvpn connect "$CONNECT" || echo "‚ùå Reconnection failed"
            else
                nordvpn connect || echo "‚ùå Reconnection failed"
            fi
        fi
    else
        echo "‚ö†Ô∏è  $(date): Not authenticated - please complete browser login"
        echo "üí° Run: nordvpn login (and follow the URL)"
    fi
    
    sleep 60
done 